[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "PsyTeachR Book Template Workshop",
    "section": "",
    "text": "Workshop Overview\nIn this informal workshop, I will walk through the steps to use the new PsyTeachR book template to create online books. This uses Quarto - a new version of R Markdown - to combine code with text. You can create a very simple Quarto book - I wrote this workshop guide using it - but the PsyTeachR template has more complete settings, placeholders, and conventions for our typical needs.\nIf you are unfamiliar with the PsyTeachR suite of books, you can see the website collection here: https://psyteachr.github.io/.\nSome of these examples use the old R Markdown version, so you can see an example of the new Quarto template in the Applied Data Skills book developed by Dr Emily Nordmann and Prof Lisa DeBruine (who also develops the PsyTeachR book template).\nWhen you are writing your book independently, it’s useful to look at the code behind examples to see how they create certain features. For example, Dr Wil Toivo and I are rewriting the Fundamentals of Quantitative Analysis book and you can see our github repository.\nAll of these books are designed to teach data skills as they demonstrate and render code well, but you can use them for any materials using Markdown features. For example, I host the course information for RM1 using the book template.\nOnce you knit them and push any changes to github, you get a url to link to them like any website. This is great for sharing with students as its free and simple to access, and its great for you and demonstrating impact as you share your work with others.\nIntended Learning Outcomes (ILOs)\nBy the end of the workshop, you will be able to:\n\nCreate an online book using the booktem R package in RStudio.\nUse the basic functions of git/github to commit changes and host the book using github pages.\nCreate features suited to your audience such as Markdown formatting, code chunks, referencing, glossaries, and interactive questions."
  },
  {
    "objectID": "intro.html",
    "href": "intro.html",
    "title": "1  Introduction",
    "section": "",
    "text": "This is a book created from markdown and executable code.\nSee Knuth (1984) for additional discussion of literate programming.\n\n1 + 1\n\n[1] 2\n\n\n\n\n\n\nKnuth, Donald E. 1984. “Literate Programming.” Comput. J. 27 (2): 97–111. https://doi.org/10.1093/comjnl/27.2.97."
  },
  {
    "objectID": "summary.html",
    "href": "summary.html",
    "title": "2  Summary",
    "section": "",
    "text": "In summary, this book has no content whatsoever.\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "references.html",
    "href": "references.html",
    "title": "References",
    "section": "",
    "text": "Knuth, Donald E. 1984. “Literate Programming.” Comput.\nJ. 27 (2): 97–111. https://doi.org/10.1093/comjnl/27.2.97."
  },
  {
    "objectID": "workshop_prep.html#download-r-and-rstudio",
    "href": "workshop_prep.html#download-r-and-rstudio",
    "title": "1  Preparation before the workshop",
    "section": "1.2 Download R and RStudio",
    "text": "1.2 Download R and RStudio\nIf you are new to R/RStudio, you will need to install both pieces of software which is normally pretty straightforward. You might find this YouTube video here useful.\nIf you are a more experienced R/RStudio user, just make sure you update your version of R/RStudio as the booktem package will only work for recent versions as Posit are rapidly developing Quarto. I am currently using R version 4.3.2 (2023-10-31) and RStudio 2023.6.2.561, but the more recent the better.\n\n1.2.1 Installing Base R\nInstall base R. Choose the download link for your operating system (Linux, Mac OS X, or Windows).\nIf you have a Mac, install the latest release from the newest R-x.x.x.pkg link (or a legacy version if you have an older operating system). After you install R, you should also install XQuartz to be able to use some visualisation packages.\nIf you are installing the Windows version, choose the “base” subdirectory and click on the download link at the top of the page. After you install R, you should also install RTools and use the “recommended” version highlighted near the top of the list.\nIf you are using Linux, choose your specific operating system and follow the installation instructions. If you use Linux, you probably do not need help from me for installing software and I will probably not know how to help you as I have never used Linux.\n\n\n1.2.2 Installing RStudio\nGo to rstudio.com and download the RStudio Desktop version for your operating system. It should recognise your operating system and allow you to download via the blue Download button, but you can look for previous versions if you need one.\n\n\n1.2.3 Install the booktem R package\nThe PsyTeachR book template is contained within a package hosted on Lisa’s github called booktem. To install the package, run the following code in the Console of RStudio:\n\ndevtools::install_github(\"debruine/booktem\")\n\nIf you are new to R/RStudio, you probably have no user packages installed, so you will get a prompt to allow booktem to install the other R packages it depends on to work. This might take a few minutes, so go and enjoy yourself a hot drink.\n\n\n\n\n\n\nCaution\n\n\n\nOne of these messages might say something like “do you want to compile packages where there is a binary version” and give you several options to select. You will only be able to select 1 if you have Rtools downloaded on a Windows computer as you need developer tools to do this. Macs should not need any additional software to compile binary packages. These binary versions are normally a little more recent, so its useful to install them if possible.\n\n\nIf you are a more experienced R/RStudio user, you might be prompted to update your R packages that booktem depends on. Obviously use your judgement if you are in a place to update your packages, but the book template might not work with older packages."
  },
  {
    "objectID": "workshop_prep.html#download-git-and-github",
    "href": "workshop_prep.html#download-git-and-github",
    "title": "1  Preparation before the workshop",
    "section": "1.3 Download git and github",
    "text": "1.3 Download git and github\nPotentially the most unfamiliar element of this process will be working with git and github. If you have not used it before, git is a version control system which tracks file changes on your computer. github is an online system which uses git to host those changes and make your code available online.\nThere is an installation guide on github, but we have access to a fantastic resource developed by our colleagues in Mathematics and Statistics. They developed an online course on Moodle introducing staff and students to git and github. You will need the enrollment code git_psych_24 to access the course.\nThere are 7 units in total, but for the purposes of this workshop, I would consider 1 and 2 as essential for downloading git/github and using it as a single user to track changes. Reaching this point will be super helpful for following on as easy as possible in the workshop.\nIf you have time, completing unit 3 will give you everything you need if you are only using it on your own. If you plan on writing the book in a team, units 4 and 5 cover being a group project user, then 6 and 7 for advanced features."
  },
  {
    "objectID": "workshop_prep.html#finished",
    "href": "workshop_prep.html#finished",
    "title": "1  Preparation before the workshop",
    "section": "1.4 Finished",
    "text": "1.4 Finished\nYou are ready to make a book in the workshop! See you all on the 1st of August."
  },
  {
    "objectID": "workshop_guide.html",
    "href": "workshop_guide.html",
    "title": "2  Workshop plan",
    "section": "",
    "text": "To follow along in the workshop if you fall behind, we will complete the following steps."
  },
  {
    "objectID": "book_conventions.html",
    "href": "book_conventions.html",
    "title": "3  Quarto features and book conventions",
    "section": "",
    "text": "As you work on your own book, you might find the following features and conventions useful for inspiration."
  },
  {
    "objectID": "workshop_prep.html#book-workflow",
    "href": "workshop_prep.html#book-workflow",
    "title": "1  Preparation before the workshop",
    "section": "1.1 Book workflow",
    "text": "1.1 Book workflow\nFor an overview to show why you need the following the pieces of software, the workflow for creating and editing the book is:\n\n1.1.1 Creating the book\n\n\n\n\n\n1.1.2 Editing the book"
  },
  {
    "objectID": "workshop_prep.html#creating-an-online-book-workflow",
    "href": "workshop_prep.html#creating-an-online-book-workflow",
    "title": "1  Preparation before the workshop",
    "section": "1.1 Creating an online book workflow",
    "text": "1.1 Creating an online book workflow\nFor an overview to show why you need the following the pieces of software, you will follow this workflow to create and edit the book.\n\n1.1.1 Creating the book\n\nInstall the booktem R package.\nIn RStudio, use the create_book() function to create a new project in your working directory containing the initial template files.\nEdit the basic details of your book, like the title, author(s), and description.\nCreate a new github repository for your book folder.\nPush the initial repository so the code is available on github.\nActivate github pages to render the book online via a URL.\n\n\n\n1.1.2 Editing the book\n\nOpen the book .Rproj file to start working on the book in RStudio.\nEdit or add chapter files in RStudio, specifying their order in the _quarto.yml file.\nRender individual chapter files as you work on them. Render index.qmd when you want to update all the chapters, or render them one by one to ensure all new changes are available.\nAdd commits at key points using git/github to mark milestones with useful commit messages.\nWhen you want the book updating, push the changes to be available on github and your book URL after a short delay."
  },
  {
    "objectID": "workshop_prep.html#download-git-and-github-desktop",
    "href": "workshop_prep.html#download-git-and-github-desktop",
    "title": "1  Preparation before the workshop",
    "section": "1.3 Download git and github desktop",
    "text": "1.3 Download git and github desktop\nPotentially the most unfamiliar element of this process will be working with git and github. If you have not used it before, git is a version control system which tracks file changes on your computer (like OneDrive but for code). github is an online system which uses git to host those changes and make your code available online. There is a graphical user interface called github desktop which I use and will demonstrate. If you want to use the command line version of git/github, you probably do not need me to show you how.\nThere is an installation guide on github, but we have access to a fantastic resource developed by our colleagues in Mathematics and Statistics. They developed an accessible online course on Moodle introducing staff and students to version control using git and github. You will need the enrollment code git_psych_24 to access the course.\nThere are 7 units in total which do not take very long, but for the purposes of this workshop, I would consider 1 and 2 as essential for downloading git/github desktop and using it as a single user to track changes. Reaching this point will be super helpful for following along in the workshop as the terms will be more familiar to you like repositories, commits, and pushing changes.\nIf you have time, completing unit 3 will give you everything you need if you are only using it on your own. If you plan on writing the book in a team, units 4 and 5 cover being a group project user, then 6 and 7 for advanced features.\n\n\n\n\n\n\nApply for education membership\n\n\n\nThe standard version of github should meet all your needs, but by working at a university you are eligible to apply for an education membership. If you are interested you can find out more on the github education site for teachers. For example, with an education profile, you can get unlimited private repositories."
  },
  {
    "objectID": "workshop_guide.html#example-book",
    "href": "workshop_guide.html#example-book",
    "title": "2  Workshop plan",
    "section": "2.1 Example book",
    "text": "2.1 Example book\nFor an example of the new book template, we will explore the new Fundamentals of Quantitative Analysis book. I have edited the first two chapters to use new Quarto features, so they can provide inspiration for what you can do with the book template."
  },
  {
    "objectID": "workshop_guide.html#creating-the-book-template",
    "href": "workshop_guide.html#creating-the-book-template",
    "title": "2  Workshop plan",
    "section": "2.2 Creating the book template",
    "text": "2.2 Creating the book template\nIf you have not followed the preparation instructions yet, you need R/RStudio installed to your computer, the booktem package installed from Lisa’s github, and git/github desktop installed on your computer. I will be demonstrating how to use github desktop rather than the command line.\nThe first step is thinking about where you want your book folder stored on your computer, where all the files will live. I have a folder within Documents called git_repos where I store all my git repositories away from OneDrive (see below). You do not need to create a folder for the book itself as the function will do that for you, but you need somewhere for that folder to live.\n\n\n\n\n\n\nDo not create github repositories within OneDrive\n\n\n\nWe have not reached the github step yet, but as you think about where you want your folder for the book, please do not use a folder within OneDrive. Sometimes it works, but most of the time is causes chaos as OneDrive is trying to track changes, github is trying to track changes, which ends in them fighting over file permissions.\n\n\nOnce you have a folder your book can live in, open RStudio and set your working directory to this folder, for example from the top menu Session &gt;&gt; set working directory &gt;&gt; Choose directory and navigate to this folder.\nOnce RStudio knows where you want your working directory, you can create the book using the following code in the console and editing accordingly before you run the code. Do not worry though, you can edit all of these later, but this will create the initial version.\n\n# We first need to load the booktem library, assuming its installed properly\nlibrary(booktem)\n\ncreate_book(path = \"your_book_file_name\", # If you set your working directory, you should not need to add the full path\n            title = \"My book title\", # The main title of your book\n            authors = list( # You need a new line for any additional author, or delete the author 2 line if you're solo\n              c(\"Author 1 first name\", \"Author 1 last name\", \"Author 1 ORCiD\"),\n              c(\"Author 2 first name\", \"Author 2 last name\", \"Author 2 ORCiD\"))\n            )\n\nOnce you press run, you should get a bunch of progress messages from Setting up project.... Once its finished, your book will open in a new session and you will see the rendered version appear in your default internet browser.\nCongratulations, you have a book skeleton to work with!"
  },
  {
    "objectID": "workshop_guide.html#tour-of-the-quarto-book-template",
    "href": "workshop_guide.html#tour-of-the-quarto-book-template",
    "title": "2  Workshop plan",
    "section": "2.3 Tour of the Quarto book template",
    "text": "2.3 Tour of the Quarto book template\n\n\\_quarto.yml\n\nWe will start by exploring the \\_quarto.yml file where you can edit all the details for your book, like the title, description, author(s), and the licence. In the new Quarto book template, this is also how you control the order of chapters.\n\n\n\n\n\n\nWhat is a .yml file?\n\n\n\nYAML / .yml are configuration files for programs which must follow specific formatting conventions.\n\n\nWithin the .yml file, I will highlight key features in: project, book, bibliography, csl, and format.\n\nindex.qmd\n\nIndex will be the opening page for the link to your book, so this will typically include an overview of what your book contains, who to contact for problems/questions etc.\n\nR/ folder\n\nThe R/ folder is where you can save bits of R code that your book relies on. There is some code in here that Lisa has worked on to help with certain functionality, like how the glossary looks.\n\ninclude/ folder\n\nThe include/ folder is a similar idea to R/. It has a bunch of files the book uses for formatting and any chapters would be able to access stuff here. For example, a .bib file for your references and a .csl file for the style of your references.\n\ndocs/ folder\n\nThe docs/ folder is where the rendered .html versions of your book will update to. The process behind creating books in Quarto is writing them in Markdown, then Markdown is converted to .html. When we add the book to github pages, this is the folder you point it to for how to present the book online.\n\nLicence\n\nBy default, booktem gives the books a CC-BY-SA-4.0 licence. This is a Creative Commons licence which states people can adapt your materials but must provide you with credit. You can learn more about different types of Creative Commons licences online. If you want to state a different licence depending on your materials, you can update the text in the Licence file and in the .yml.\n\nChapter files\n\nBy default, you get an example index.qmd and one chapter .qmd for an example. The example chapter has a bunch of advice on what to edit and features like I will demonstrate, but you can delete this text or create your own files to start writing chapters.\nYou will need one level 1 header (# Chapter title) to start the file, and that will be the name of your chapter at the top of the page and in the table of contents.\n\n\n\n\n\n\nWarning\n\n\n\nMake sure you only use one level 1 header per chapter. If you try and add multiple within one file, it will think they are separate chapters and try and split them when it renders, making it look weird.\n\n\nOnce you start adding multiple chapters, remember to update the .yml file for the order you want them in your book.\n\n\n\n\n\n\nTip\n\n\n\nIf you are converting a previous book to the new template, there is a handy little function rmd2qmd. This copies .Rmd files and renames them to .qmd. The function looks like this\n\nrmd2qmd(from_path = \"\",  # file path where your .Rmd files are\n        to_path = \"./\") # file path where you want your new .qmd files to go\n\nwhere you specify a file path to access the old .Rmd files and a file path to where you want the new .qmd files saving. Keep your working directory in mind as you will probably be starting from your book folder at this point. I usually save my old .Rmd files in a folder within the new book directory, then save the new .qmd files to the new book main directory.\n\n\n\nRendering files\n\nOnce you have finished editing or you want to check how it looks, you need to click Render for Quarto to process the code and turn it into something pretty. Once you click Render once, you can open it up in the browser and keep checking as you make edits. When you want it to rerender, click Reload the page and it will show your new edits.\n\n\n\n\n\n\nTip\n\n\n\nThe single best part of Quarto and the new book template is you can keep rendering and checking what your work looks like in the flesh. Previously, you had to render the whole book to check how it rendered, but now you can keep updating the browser to see what your changes look like.\n\n\n\n\n\n\n\n\nCaution\n\n\n\nIf you introduce an error, you will get an error and red box on the screen to highlight Quarto cannot render the book. If you look in the Background Jobs tab in the console below, you should get an error message for the source of the problem if you are unsure what you did wrong.\nAfter an error, you will need press Render again rather than just refreshing the browser.\n\n\nThese are the key components to make your book. Until this point, these edits all exist on your own computer. But now it is time to track your code using github and make your book accessible online via github pages."
  },
  {
    "objectID": "workshop_guide.html#creating-a-github-repository",
    "href": "workshop_guide.html#creating-a-github-repository",
    "title": "2  Workshop plan",
    "section": "2.4 Creating a github repository",
    "text": "2.4 Creating a github repository\nOnce you have a working barebones version of your book ready to go, its time to associate your book folder with a github repository and start some version control.\nIn future, you could actually start with this part. You can create a new folder and create a repository for you to then use the create_book() function to add the book file to.\nHowever, we started by creating the book first, so we need to create a repository for an existing folder without a git component.\nPublish repository to github\n\n\n\n\n\n\nSeriously, do not create github repositories within OneDrive\n\n\n\nAs a reminder, please do not use a folder within OneDrive for your github repository."
  },
  {
    "objectID": "workshop_guide.html#tour-of-github",
    "href": "workshop_guide.html#tour-of-github",
    "title": "2  Workshop plan",
    "section": "2.5 Tour of github",
    "text": "2.5 Tour of github"
  },
  {
    "objectID": "workshop_guide.html#publish-to-github-pages",
    "href": "workshop_guide.html#publish-to-github-pages",
    "title": "2  Workshop plan",
    "section": "2.6 Publish to github pages",
    "text": "2.6 Publish to github pages\nSettings &gt;&gt; Pages. Set to none by default. Need to choose Main and /docs to point Github pages to where it needs to look for the rendered html files.\nWait for actions to show as green tick.\nCheck back and at the top of the page, it should give you the url for the page link.\nSave to browser shortcut, add to repo about for a quick link.\nTip: By default, its set to your github username .github.io and your repository name. If you want to get fancy, you can add a custom domain.\nActions and what to look out for if it does not build."
  },
  {
    "objectID": "workshop_guide.html#commiting-and-pushing-changes",
    "href": "workshop_guide.html#commiting-and-pushing-changes",
    "title": "2  Workshop plan",
    "section": "2.7 Commiting and pushing changes",
    "text": "2.7 Commiting and pushing changes\nCommit messages and future you\nReverting changes"
  },
  {
    "objectID": "workshop_guide.html#collaborating-on-github",
    "href": "workshop_guide.html#collaborating-on-github",
    "title": "2  Workshop plan",
    "section": "2.8 Collaborating on github?",
    "text": "2.8 Collaborating on github?"
  },
  {
    "objectID": "workshop_guide.html#start-working-on-your-own-book",
    "href": "workshop_guide.html#start-working-on-your-own-book",
    "title": "2  Workshop plan",
    "section": "2.9 Start working on your own book!",
    "text": "2.9 Start working on your own book!\nStart working on your own book in the remaining time we have together.\nSee the next chapter on Quarto features and book conventions for inspiration / example code for the kind of features you can use.\nDo not forget to make your own hex sticker for different logos for extra panache!"
  },
  {
    "objectID": "book_conventions.html#quarto-guide",
    "href": "book_conventions.html#quarto-guide",
    "title": "3  Worked examples for Quarto and booktem features",
    "section": "3.1 Quarto guide",
    "text": "3.1 Quarto guide\nTo check different features of Quarto, you can see an extensive user guide online."
  },
  {
    "objectID": "book_conventions.html#worked-examples",
    "href": "book_conventions.html#worked-examples",
    "title": "3  Worked examples for Quarto and booktem features",
    "section": "3.2 Worked examples",
    "text": "3.2 Worked examples\nIf you look through these books for inspiration, you can check the code to see how they do it.\nDr Wil Toivo and I are rewriting the Fundamentals of Quantitative Analysis book and you can see our github repository.\nYou can also see the Applied Data Skills book developed by Dr Emily Nordmann and Prof Lisa DeBruine, along with their github repository."
  },
  {
    "objectID": "book_conventions.html#useful-features",
    "href": "book_conventions.html#useful-features",
    "title": "3  Worked examples for Quarto and booktem features",
    "section": "3.3 Useful features",
    "text": "3.3 Useful features\n\n3.3.1 Markdown\nQuarto still uses Markdown for formatting, so you can see this part of the Quarto guide for Markdown Basics.\n\n3.3.1.1 Headers\nThe book template table of contents goes by default to level 3 headers (but you can go to level 6 headers if you really want), so keep in mind what will be a logical nesting of headers, sub-headers etc. You add a hash for each level of header:\n\n# Level 1 header\n\n## Level 2 header\n\n### Level 3 header\n\n\n\n3.3.1.2 Text formatting\nYou make text italics by surrounding it with one star (*italics*), or bold by surrounding it with two stars (**bold**).\nIf you want to give text code formatting, you can add back ticks around it.\n\n`example code`\n\nproduces:\nexample code.\nIf you want to add bullet points, you can use - or *:\n\n- Bullet point 1\n\n- Bullet point 2\n\n- Bullet point 3\n\n\nBullet point 1\nBullet point 2\nBullet point 3\n\nThe same applies to numbered lists:\n\n1. List 1\n\n2. List 2\n\n3. List 3\n\n\nList 1\nList 2\nList 3\n\nOr even sub-lists with a little indent:\n\n1. List 1\n\n    1. Sublist 1\n    \n    2. Sublist 2\n\n2. List 2\n\n\nList 1\n\nSublist 1\nSublist 2\n\nList 2\n\n\n\n3.3.1.3 Links\nYou can add hyperlinks with the form:\n\n[hyperlinks](https://quarto.org/docs/authoring/markdown-basics.html#links-images)\n\nwhere the writing in square brackets is the text, and the link goes in the round brackets. By default, these link within the current page which I find infuriating. So, you can add a little html code to open a new tab with the link:\n\n[hyperlinks](https://quarto.org/docs/authoring/markdown-basics.html#links-images){target=\"_blank\"}\n\n\n\n3.3.1.4 Images\nThere are different ways to add images, where the Markdown version uses a similar format to links which I will demonstrate through this duck:\n\n![This is a duck.](images/Duck.png)\n\n\n\n\nThis is a duck. If Helena is reading this, yes it has a creative commons licence.\n\n\nThere are some cool new Quarto features making it easy to combine multiple images. For example, we can add two ducks and specify we want them in two columns.\n\n::: {#fig-duck layout-ncol=2}\n![](images/images/Duck.png)\n![](images/images/Duck.png)\nDuck 1 (left) and Duck 2 (right). \n:::\n\n\n\n\n\n\n\n\n\n\n\nFigure 3.1: Duck 1 (left) and Duck 2 (right).\n\n\nYou can also reference figures to add little hyperlinks and automatically number them. The title after the hash must start with fig to be registered as a figure, and you can also add tbl to number tables separately.\nFigure 3.1 showed two ducks side by side. You do not even need to type Figure: @fig-duck.\nYou can also use knitr to add figures, and using code chunks has some new handy features using tags. They work in a similar way to code options, but make it easier to add longer captions etc, as shown in Figure 3.2.\n```{r}\n#| label: fig-img-duck\n#| fig.cap: \"This is a longer caption about our beloved duck.\"\n#| fig-alt: \"You can also add alt text to images.\"\n\nknitr::include_graphics(\"images/Duck.png\")\n```\n\n\n\n\n\nFigure 3.2: This is a longer caption about our beloved duck.\n\n\n\n\n\n\n\n3.3.2 Code chunks\nIf you are making a book to show code, there are a couple of features that might be useful.\nAdding code chunks will by default show both the code and output:\n```{r}\nrnorm(n = 5, mean = 10, sd = 2)\n```\n\nrnorm(n = 5, mean = 10, sd = 2)\n\n[1] 13.395999  9.726586 10.527815  8.940158  9.507838\n\n\nThere are several features you can edit by adding different options. For example, if you do not want to show the code, you can set echo=FALSE after the r {r echo=FALSE}:\n\n\n[1] 13.593904  9.520628  8.430014 12.699657 11.479772\n\n\nIf you want to demonstrate code but not execute it - such as to demonstrate inaccurate code, you can set eval=FALSE after the r {r eval=FALSE}:\n\nrnorm(n = 5, mean = 10, sd = 2)\n\n\n\n3.3.3 Callout blocks\nMy personal favourite features, you can highlight content with callout blocks. These range from notes that people might find interesting, to warnings that something could go mortally wrong.\n\n::: {.callout-note}\nThese are notes.\n:::\n\n\n\n\n\n\n\nNote\n\n\n\nThese are notes.\n\n\nYou can change the title by using hashes within the callout. They count as real headers in the Quarto outline. So, if you use one hash, it looks like a level one header which deeply disturbs me, so I like to use four hashes to make more sense in the chapter structure.\n\n::: {.callout-note}\n#### Look at my interesting title\nThese are notes.\n:::\n\n\n\n\n\n\n\nLook at my interesting title\n\n\n\nThese are notes.\n\n\nYou can also make the box collapse by default, which can be handy to hide solutions or obscure tangents.\n\n::: {.callout-note collapse=true}\n#### Please look at me\nSecret secret notes. \n:::\n\n\n\n\n\n\n\nPlease look at me\n\n\n\n\n\nSecret secret notes.\n\n\n\nOther types of callout blocks include:\n\nWarning\n\n\n::: {.callout-warning}\nThese are notes.\n:::\n\n\n\n\n\n\n\nWarning\n\n\n\nThese are warnings.\n\n\n\nImportant\n\n\n::: {.callout-important}\nThis is something important\n:::\n\n\n\n\n\n\n\nImportant\n\n\n\nThis is something important\n\n\n\nTip\n\n\n::: {.callout-tip}\nHere is a handy tip. \n:::\n\n\n\n\n\n\n\nTip\n\n\n\nHere is a handy tip.\n\n\n\nAnd, a caution\n\n\n::: {.callout-caution}\nHere is a caution about something.\n:::\n\n\n\n\n\n\n\nCaution\n\n\n\nHere is a caution about something.\n\n\n\n\n3.3.4 References\nIf you want to add proper references instead of just hyperlinks, you need a .bib file from a reference manager.\nThe .bib file should be in the include folder (unless you point it somewhere else) and you can specify it in the _quarto.yml file through the bibliography entry:\n\nbibliography: include/references.bib\n\n\n\n\n\n\n\nHow do I download and edit a .bib file?\n\n\n\nI use Zotero as a reference manager and its super easy to download a .bib file for a project you are working on. Downloading one entry is a little annoying as you need to export it as BibTex and copy from the file it produces, but if you create a folder to store everything for the book, you can just export the folder each time you add new entries (right click &gt;&gt; export collection &gt;&gt; BibTex format and OK).\nIf you do have the single entry, you can open the .bib file within RStudio and copy the entry in. It will look something like this:\n\n@article{bartlett_power_2022,\n    title = {Power to the {People}: {A} {Beginner}’s {Tutorial} to {Power} {Analysis} using jamovi},\n    volume = {6}\n    ...}\n\nwhich stores all the information for the .csl to pull out and cite/reference as needed.\n\n\nTo cite, you need the code at the start of the bib entry. For example, @bartlett_power_2022 produces Bartlett & Charles (2022) and the full reference will be added to the references chapter.\nDepending on the citation style you want, there are different codes, such as adding it in parentheses [@bartlett_power_2022] (Bartlett & Charles, 2022). For a full list of options, you can check out the Quarto citation guide.\nBy default, the book template has APA style for referencing, but if you need a different referencing style, you can add and specify a different .csl file.\n\ncsl: include/apa.csl\n\n\n\n\n\n\n\nHow do I specify a .csl file?\n\n\n\n.csl stands for citation style language and you can download one from the Zotero style repository. For example, you could search for vancouver, click on the link, and it will download a new .csl file you can add to your repository.\n\n\n\n\n3.3.5 webexercises interactive questions\nThe book template automatically includes the webexercises package which can add interactive questions for self-tests. This is great for students checking their understanding through MCQs or adding easy to check answers like numbers.\n\n3.3.5.1 MCQs\nYou can add questions through inline code, or by first specifying them in an R code block if it makes it easier to edit longer text.\nFor example, this workshop is:\n\n Life changing Boring Mediocre OK\n\n\n`r longmcq(c(answer = \"Life changing\", \"Boring\", \"Mediocre\", \"OK\"))` \n\n\n\n3.3.5.2 Single answer\nYou can ask simple single answers that are easy to evaluate:\n\nOn a scale of 1 (very dissatisfied) - 7 (very satisfied), how pleased are you with this workshop? \n\n\n`r fitb(7)`\n\n\n\n3.3.5.3 True or false\nIf you want an even simpler response, you can ask true or false.\n\nAfter the workload, I am going to make my own book: TRUEFALSE\n\n\n`r torf(TRUE)`\n\n\n\n\n3.3.6 Embedding files to download\nE.g., data, .Rmd, .docx\n\n\n3.3.7 Adding a glossary\n\n\n\n\nBartlett, J., & Charles, S. (2022). Power to the People: A Beginner’s Tutorial to Power Analysis using jamovi. Meta-Psychology, 6. https://doi.org/10.15626/MP.2021.3078"
  }
]